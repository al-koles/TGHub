@page
@using Microsoft.AspNetCore.Components.Web
@using Microsoft.AspNetCore.Mvc.TagHelpers
@using Microsoft.Extensions.Localization
@using Microsoft.Extensions.Options
@using TGHub.Application
@using TGHub.Application.Resources
@using TGHub.Blazor.Shared.Components
@using TGHub.Telegram.Bot.Options
@model TGHub.Blazor.Pages.Login
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

@inject IStringLocalizer<UiStrings> UiStringsLoc
@inject IOptionsSnapshot<TelegramBotOptions> TelegramBotOptionsSnapshot

@{
    Layout = "_Layout";
}
<component type="typeof(StringPageTitle)" render-mode="ServerPrerendered" param-Value="@($"{UiStringsLoc[UiStrings.Login]} - {Constants.WebSiteName}")"/>
<div class="h-screen flex flex-col items-center justify-center gap-3">
    <div class="max-w-md w-full flex flex-col items-center bg-white rounded-lg shadow-lg p-8">
        <script async src="https://telegram.org/js/telegram-widget.js?22"
                data-telegram-login="@TelegramBotOptionsSnapshot.Value.BotUserName"
                data-size="large"
                data-auth-url="/login-callback?redirectUrl=@(Uri.EscapeDataString(Model.RedirectUrl ?? "/"))"
                data-request-access="write">
        </script>
        <div class="text-gray-600 mt-4 text-center">
            @UiStringsLoc[UiStrings.LogoutInstruction]
        </div>
        <div class="w-full flex justify-end mt-4 min-h-[2rem]">
            <component type="typeof(CultureSelector)" render-mode="Server"/>
        </div>
    </div>
</div>