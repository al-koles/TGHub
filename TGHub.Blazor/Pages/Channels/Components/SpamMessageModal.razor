@using TGHub.Application.Resources
@using TGHub.Application.Services.Spammers
@using TGHub.Blazor.Resources
@using TGHub.Domain.Entities
@using TGHub.Domain.Enums
@using System.Globalization
@inject IStringLocalizer<UiStrings> UiStringsLoc
@inject IServiceProvider ServiceProvider

<div>
    <label class="font-bold mr-1">@UiStringsLoc[UiStrings.Reason]: </label>
    @if ((SpamMessage.Type & SpamMessageType.OffensiveLanguage) == SpamMessageType.OffensiveLanguage)
    {
        <span>@UiStringsLoc[UiStrings.AutoSpamReason]</span>
    }
    @if ((SpamMessage.Type & SpamMessageType.SpamWordFound) == SpamMessageType.SpamWordFound)
    {
        <span>
            @UiStringsLoc[UiStrings.ListSpamReason]
            @SpamMessage.Context
        </span>
    }
</div>
<div class="mt-3">
    <label class="font-bold">@UiStringsLoc[UiStrings.Time]:</label>
    @SpamMessage.DateTimeWritten.ToString(CultureInfo.CurrentCulture.DateTimeFormat.FullDateTimePattern)
</div>
@if (Spammer != null)
{
    <div class="mt-3">
        <label class="font-bold">@UiStringsLoc[UiStrings.Spammer]:</label>
        <button @onclick="@ShowSpammerModal" class="text-[@ColorStrings.C4]/80 hover:text-[@ColorStrings.C4]">
            @Spammer?.TelegramId
        </button>
    </div>
}
<div class="mt-3">
    <label class="font-bold">@UiStringsLoc[UiStrings.SpamMessage]:</label>
    <div class="whitespace-pre-wrap">
        @((MarkupString)SpamMessage.Value)
    </div>
</div>

@code {

    [CascadingParameter]
    private IModalService ModalService { get; set; } = null!;

    [Parameter]
    public SpamMessage SpamMessage { get; set; } = new();

    [Parameter]
    public Spammer? Spammer { get; set; }

    private async Task ShowSpammerModal()
    {
        await using var scope = ServiceProvider.CreateAsyncScope();
        var spammerService = scope.ServiceProvider.GetRequiredService<ISpammerService>();
        var spammer = await spammerService.FirstOrDefaultAsync(s => s.Id == Spammer!.Id);
        if (spammer != null)
        {
            ModalService.Show<SpammerModal>(spammer.TelegramId.ToString(),
                new ModalParameters
                {
                    { nameof(SpammerModal.Spammer), spammer }
                },
                new ModalOptions
                {
                    Size = ModalSize.Large
                });
        }
    }

}