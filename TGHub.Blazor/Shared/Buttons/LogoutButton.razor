@using TGHub.Application.Resources
@using TGHub.Application.Common
@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject IToastService ToastService
@inject ILogger<LogoutButton> Logger
@inject IStringLocalizer<UiStrings> UiStringsLoc
@inject IStringLocalizer<NotificationStrings> NotificationStringsLoc

<AuthorizeView>
    <button class="px-2 py-1 border rounded hover:bg-gray-700/ text-slate-50"
            @onclick="@LogOutAsync">
        @UiStringsLoc[UiStrings.LogOut]
        @if (_isLoading)
        {
            <ElementLoader/>
        }
    </button>
</AuthorizeView>

@code {

    private bool _isLoading;

    private async Task LogOutAsync()
    {
        try
        {
            _isLoading = true;
            await ((CustomAuthStateProvider)AuthenticationStateProvider).LogoutAsync();
            ToastService.ShowInfo(NotificationStringsLoc[NotificationStrings.LogOutSuccess]);
        }
        catch (Exception e)
        {
            ToastService.ShowError(NotificationStringsLoc[NotificationStrings.LogOutError]);
            Logger.LogError(e, "Logout error");
        }
        finally
        {
            _isLoading = false;
        }
    }

}