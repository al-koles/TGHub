@using TGHub.Blazor.Resources
@typeparam TId

<select @onchange="@OnValueChanged"
        class="focus:outline-0 py-1 px-2 rounded bg-[@ColorStrings.C1] text-[@ColorStrings.C3]">
    @foreach (var option in Items)
    {
        <option value="@option">
            <div class="flex items-center gap-2">
                <div>
                    <img src="@option.Id" alt="@option.Name.ToUpper().FirstOrDefault()" width="20" height="20"
                         class="rounded-full bg-[@ColorStrings.C5] text-[@ColorStrings.C0] text-xl"/>
                </div>
                <div>
                    @option.Name
                </div>
            </div>
        </option>
    }
</select>

@code {

    [Parameter]
    public List<CustomSelectModel<TId>> Items { get; set; } = new();
    
    [Parameter]
    public CustomSelectModel<TId>? Value { get; set; }
    
    [Parameter]
    public EventCallback<CustomSelectModel<TId>?> ValueChanged { get; set; }

    private async Task OnValueChanged(ChangeEventArgs args)
    {
        if (args.Value is CustomSelectModel<TId> value)
        {
            await ValueChanged.InvokeAsync(value);
        }
        else
        {
            await ValueChanged.InvokeAsync(null);
        }
    }

}